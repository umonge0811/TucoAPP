@model GestionLlantera.Web.ViewComponents.NotificacionesViewModel
@using GestionLlantera.Web.Models.DTOs

<!-- Botón de notificaciones -->
<button class="btn btn-icon position-relative" type="button" data-bs-toggle="offcanvas" data-bs-target="#notificationsPanel">
    <i class="bi bi-bell"></i>
    @if (Model.ConteoNoLeidas > 0)
    {
        <span class="notification-badge">@(Model.ConteoNoLeidas > 99 ? "99+" : Model.ConteoNoLeidas.ToString())</span>
    }
</button>

<script>
    // Función para obtener el token CSRF
    function getCSRFToken() {
        return document.querySelector('meta[name="csrf-token"]')?.getAttribute('content') || '';
    }

    // Función global para marcar como leída
    window.marcarNotificacionComoLeida = async function(notificacionId) {
        try {
            // ✅ CORREGIR LA RUTA - Con N mayúscula
            const response = await fetch(`/web/api/Notificaciones/${notificacionId}/marcar-leida`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': getCSRFToken()
                }
            });

            if (response.ok) {
                const result = await response.json();
                if (result.success) {
                    const elemento = document.querySelector(`[data-notification-id="${notificacionId}"]`);
                    if (elemento) {
                        elemento.classList.remove('unread');
                        const badge = elemento.querySelector('.unread-indicator');
                        if (badge) badge.remove();
                    }
                    actualizarContadorNotificaciones();
                }
            }
        } catch (error) {
            console.error('Error al marcar notificación como leída:', error);
        }
    }

    window.marcarTodasComoLeidas = async function() {
        try {
            // ✅ CORREGIR LA RUTA - Con N mayúscula
            const response = await fetch('/web/api/Notificaciones/marcar-todas-leidas', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': getCSRFToken()
                }
            });

            if (response.ok) {
                const result = await response.json();
                if (result.success) {
                    location.reload();
                }
            }
        } catch (error) {
            console.error('Error al marcar todas como leídas:', error);
        }
    }

    window.manejarClickNotificacion = function(notificacionId, urlAccion) {
        marcarNotificacionComoLeida(notificacionId);

        const offcanvas = bootstrap.Offcanvas.getInstance(document.getElementById('notificationsPanel'));
        if (offcanvas) {
            offcanvas.hide();
        }

        if (urlAccion && urlAccion !== 'null' && urlAccion.trim() !== '') {
            setTimeout(() => {
                window.location.href = urlAccion;
            }, 200);
        }
    }

    async function actualizarContadorNotificaciones() {
        try {
            // ✅ CORREGIR LA RUTA - Con N mayúscula
            const response = await fetch('/web/api/Notificaciones/conteo-no-leidas');
            if (response.ok) {
                const conteo = await response.json();

                const badges = document.querySelectorAll('.notification-badge');
                badges.forEach(badge => {
                    if (conteo > 0) {
                        badge.textContent = conteo > 99 ? '99+' : conteo.toString();
                        badge.style.display = '';
                    } else {
                        badge.style.display = 'none';
                    }
                });
            }
        } catch (error) {
            console.error('Error al actualizar contador:', error);
        }
    }

    setInterval(actualizarContadorNotificaciones, 30000);
</script>