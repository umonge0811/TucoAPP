@model Tuco.Clases.DTOs.Inventario.ProductoDTO
@{
    ViewData["Title"] = "Detalle de Producto";
    Layout = "_AdminLayout";
}
    <link rel="stylesheet" href="~/css/views/inventario/detalleProducto.css">



<div class="container-fluid detalle-producto-container">
        <!-- Breadcrumb mejorado -->
<nav aria-label="breadcrumb" class="mb-3">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "Dashboard")" class="text-decoration-none">
                <i class="bi bi-house-door me-1"></i>Dashboard
            </a>
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "Inventario")" class="text-decoration-none">
                <i class="bi bi-box-seam me-1"></i>Inventario
            </a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">
            <i class="bi bi-info-circle me-1"></i>Detalle del Producto
        </li>
    </ol>
</nav> 

    <div class="page-header mb-4">
<!-- Header con título y botones mejorados -->
    <div class="d-flex flex-column flex-lg-row justify-content-between align-items-start align-items-lg-center gap-3">
        <div>
            <h1 class="h2 mb-1">
                <i class="bi bi-box-seam me-2 text-primary"></i>
                @Model.NombreProducto
            </h1>
            <p class="text-muted mb-0">
                <small>
                    <i class="bi bi-tag me-1"></i>ID: @Model.ProductoId
                    @if (!string.IsNullOrEmpty(Model.Descripcion))
                    {
                        <span class="mx-2">•</span>
                        @(Model.Descripcion.Length > 50 ? Model.Descripcion.Substring(0, 50) + "..." : Model.Descripcion)
                    }
                </small>
            </p>
        </div>

        <!-- Botones de acción mejorados -->
        <div class="d-flex flex-column flex-sm-row gap-2 w-100 w-lg-auto">
            <a asp-controller="Inventario" asp-action="Index" 
               class="btn btn-outline-secondary d-flex align-items-center justify-content-center">
                <i class="bi bi-arrow-left me-2"></i>
                <span>Volver al Inventario</span>
            </a>

            <a asp-controller="Inventario" asp-action="EditarProducto" asp-route-id="@Model.ProductoId" 
               class="btn btn-primary d-flex align-items-center justify-content-center" 
               asp-permiso="EditarProductos">
                <i class="bi bi-pencil me-2"></i>
                <span>Editar Producto</span>
            </a>

            <!-- Botón adicional de acciones -->
            <div class="dropdown">
                <button class="btn btn-outline-primary dropdown-toggle d-flex align-items-center" 
                        type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="bi bi-three-dots me-2"></i>
                    <span>Más acciones</span>
                </button>
                <ul class="dropdown-menu">
                    <li asp-permiso="Ajustar Stock">
                        <button class="dropdown-item ajuste-stock-btn" type="button" 
                            data-id="@Model.ProductoId">
                        <i class="bi bi-plus-slash-minus me-2"></i>Ajustar Stock
                        </button>
                    </li>
                    <li>
                        <button class="dropdown-item" type="button" onclick="compartirProducto()">
                            <i class="bi bi-share me-2"></i>Compartir Producto
                        </button>
                    </li>
                    <li><hr class="dropdown-divider"></li>
                    <li>
                        <button class="dropdown-item text-danger eliminar-producto-btn" type="button" 
                                data-id="@Model.ProductoId" asp-permiso="Eliminar Productos">
                            <i class="bi bi-trash me-2"></i>Eliminar Producto
                        </button>  
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

    <div class="row g-4">
        <!-- Información principal y galería -->
        <div class="col-lg-8">
            <div class="dashboard-card mb-4">
                <div class="card-header">
                    <h3>@Model.NombreProducto</h3>
                </div>
                <div class="card-body">
                    <div class="row">

                        <!-- Carrusel de imágenes -->
                        <div class="col-md-6 mb-4">
                            @if (Model.Imagenes != null && Model.Imagenes.Any())
                            {
                                <div id="productoCarrusel" class="carousel slide" data-bs-ride="carousel">
                                     <div class="carousel-inner">
                                        @for (int i = 0; i < Model.Imagenes.Count; i++)
                                        {
                                            var imagen = Model.Imagenes[i];
                                            <div class="carousel-item @(i == 0 ? "active" : "")">

                                                <img src="@imagen.UrlImagen" 
                                                     class="d-block w-100 img-fluid rounded"
                                                     alt="@Model.NombreProducto"
                                                     onerror="console.error('Error cargando imagen:', this.src); this.style.border='3px solid red';"
                                                     onload="console.log('Imagen cargada OK:', this.src);">
                                            </div>
                                        }
                                    </div>
                                    @if (Model.Imagenes.Count > 1)
                                    {
                                        <button class="carousel-control-prev" type="button" data-bs-target="#productoCarrusel" data-bs-slide="prev">
                                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                            <span class="visually-hidden">Anterior</span>
                                        </button>
                                        <button class="carousel-control-next" type="button" data-bs-target="#productoCarrusel" data-bs-slide="next">
                                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                            <span class="visually-hidden">Siguiente</span>
                                        </button>
                                    }
                                </div>

                                <!-- Miniaturas -->
                                @if (Model.Imagenes.Count > 1)
                                {
                                    <div class="row mt-2 g-2">
                                        @for (int i = 0; i < Model.Imagenes.Count; i++)
                                        {
                                            var imagen = Model.Imagenes[i];
                                            <div class="col-3">
                                                <img src="@imagen.UrlImagen" class="img-thumbnail cursor-pointer"
                                                     onclick="$('#productoCarrusel').carousel(@i)"
                                                     alt="@Model.NombreProducto - Miniatura">
                                            </div>
                                        }
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="sin-imagen-grande">
                                    <i class="bi bi-image"></i>
                                    <p>No hay imágenes disponibles</p>
                                </div>
                            }
                        </div>

                        <!-- Información del producto -->
                        <div class="col-md-6">
                            <div class="precio-section mb-3">
                                @if (Model.Costo.HasValue && Model.PorcentajeUtilidad.HasValue)
                                {
                                    <!-- Precio calculado automáticamente -->
                                    <h4 class="precio-detalle text-success">₡@((Model.PrecioCalculado ?? 0).ToString("N0"))</h4>
                                    <small class="text-success fw-bold"><i class="bi bi-calculator me-1"></i>Precio Calculado Automáticamente</small>

                                    <div class="row mt-2">
                                        <div class="col-4">
                                            <small class="text-muted">Costo:</small><br>
                                            <span class="text-muted">₡@Model.Costo.Value.ToString("N0")</span>
                                        </div>
                                        <div class="col-4">
                                            <small class="text-muted">Utilidad:</small><br>
                                            <span class="badge bg-info">@Model.PorcentajeUtilidad.Value.ToString("0.0")%</span>
                                        </div>
                                        <div class="col-4">
                                            <small class="text-muted">Ganancia:</small><br>
                                            <span class="text-success">₡@Model.UtilidadEnDinero.Value.ToString("N0")</span>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <!-- Precio manual -->
                                    <h4 class="precio-detalle text-primary">₡@((Model.Precio ?? 0).ToString("N0"))</h4>
                                    <small class="text-primary fw-bold"><i class="bi bi-pencil me-1"></i>Precio Manual</small>

                                    @if (Model.Costo.HasValue || Model.PorcentajeUtilidad.HasValue)
                                    {
                                        <div class="alert alert-warning mt-2" role="alert">
                                            <i class="bi bi-exclamation-triangle me-1"></i>
                                            <small>Información de costo/utilidad incompleta. Configure ambos valores para cálculo automático.</small>
                                        </div>
                                    }
                                }
                            </div>
                            <div class="mb-3">
                                <div class="stock-info @(Model.CantidadEnInventario <= Model.StockMinimo ? "text-danger" : "text-success")">
                                    <i class="bi @(Model.CantidadEnInventario <= Model.StockMinimo ? "bi-exclamation-triangle" : "bi-check-circle")"></i>
                                    <span>
                                        @if (Model.CantidadEnInventario <= Model.StockMinimo)
                                        {
                                            <text>Stock bajo: </text>
                                        }
                                        else
                                        {
                                            <text>Disponible: </text>
                                        }
                                        @Model.CantidadEnInventario unidades
                                    </span>
                                </div>
                            </div>

                            @if (!string.IsNullOrEmpty(Model.Descripcion))
                            {
                                <div class="mb-3">
                                    <h5>Descripción</h5>
                                    <p>@Model.Descripcion</p>
                                </div>
                            }

                            <div class="mb-3">
                                <h5>Información Adicional</h5>
                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Stock Mínimo:</span>
                                        <span>@Model.StockMinimo unidades</span>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between">
                                        <span>Última Actualización:</span>
                            @*             <span>@(Model.FechaUltimaActualizacion?.ToString("dd/MM/yyyy HH:mm") ?? "N/A")</span>
                             *@        </li>
                                    @if (Model.Costo.HasValue && Model.PorcentajeUtilidad.HasValue)
                                    {
                                        <li class="list-group-item d-flex justify-content-between">
                                            <span>Método de Precio:</span>
                                            <span class="badge bg-success">Cálculo Automático</span>
                                        </li>
                                        <li class="list-group-item d-flex justify-content-between">
                                            <span>Margen de Ganancia:</span>
                                            <span class="text-success fw-bold">₡@Model.UtilidadEnDinero.Value.ToString("N0")</span>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="list-group-item d-flex justify-content-between">
                                            <span>Método de Precio:</span>
                                            <span class="badge bg-primary">Manual</span>
                                        </li>
                                    }
                                </ul>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Información específica de llantas y estadísticas -->
<div class="col-lg-4">
    @if (Model.Llanta != null && Model.Llanta.LlantaId > 0)
    {
        <div class="dashboard-card mb-4">
            <div class="card-header">
                <h3>
                    <i class="bi bi-car-front me-2"></i>
                    Especificaciones de Llanta
                </h3>
            </div>
            <div class="card-body">
                <ul class="list-group list-group-flush">
                    @if (!string.IsNullOrEmpty(Model.Llanta.Marca))
                    {
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Marca:</span>
                            <span>@Model.Llanta.Marca</span>
                        </li>
                    }
                    @if (!string.IsNullOrEmpty(Model.Llanta.Modelo))
                    {
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Modelo:</span>
                            <span>@Model.Llanta.Modelo</span>
                        </li>
                    }
                    @if (Model.Llanta.Ancho.HasValue)
                    {
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Medidas:</span>
                            <span>@Model.Llanta.Ancho/@Model.Llanta.Perfil R@Model.Llanta.Diametro</span>
                        </li>
                    }
                    @if (!string.IsNullOrEmpty(Model.Llanta.IndiceVelocidad))
                    {
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Índice de Velocidad:</span>
                            <span>@Model.Llanta.IndiceVelocidad</span>
                        </li>
                    }
                    @if (Model.Llanta.Capas.HasValue)
                    {
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Capas:</span>
                            <span>@Model.Llanta.Capas</span>
                        </li>
                    }
                    @if (!string.IsNullOrEmpty(Model.Llanta.TipoTerreno))
                    {
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Tipo de Terreno:</span>
                            <span>@Model.Llanta.TipoTerreno</span>
                        </li>
                    }
                </ul>
            </div>
        </div>
    }
</div>

            <div class="dashboard-card">
                <div class="card-header">
                    <h3>
                        <i class="bi bi-graph-up me-2"></i>
                        Estadísticas
                    </h3>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <h5>Movimientos Recientes</h5>
                        <div id="movimientosChart" style="width: 100%; height: 200px;"></div>
                    </div>

                    <h5>Información de Ventas</h5>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Vendidos (Último mes):</span>
                            <span>15 unidades</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Ingresos Generados:</span>
                            <span>₡450,000</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Posición en Ventas:</span>
                            <span>#5</span>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- ✅ MODAL NUEVO DE AJUSTE DE STOCK -->
<div class="modal fade" id="ajusteStockModal" tabindex="-1" aria-labelledby="ajusteStockModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="ajusteStockModalLabel">
                    <i class="bi bi-plus-slash-minus me-2"></i>
                    Ajustar Stock de Inventario
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="ajusteStockForm">
                    <input type="hidden" id="productoId" value="@Model.ProductoId">

                    <!-- Información del producto -->
                    <div class="alert alert-info mb-3" id="infoProductoAjuste" style="display: none;">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-info-circle me-2"></i>
                            <div>
                                <strong>Producto:</strong> <span id="nombreProductoAjuste">-</span><br>
                                <strong>Stock actual:</strong> <span id="stockActualAjuste">-</span> unidades
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <!-- Tipo de ajuste -->
                        <div class="col-md-6 mb-3">
                            <label for="tipoAjuste" class="form-label fw-bold">
                                <i class="bi bi-gear me-1"></i>
                                Tipo de Ajuste <span class="text-danger">*</span>
                            </label>
                            <select class="form-select" id="tipoAjuste" required>
                                <option value="">Seleccione tipo de ajuste</option>
                                <option value="entrada">📈 Entrada de Mercancía</option>
                                <option value="salida">📉 Salida de Mercancía</option>
                                <option value="ajuste">🔧 Ajuste de Inventario</option>
                            </select>
                        </div>

                        <!-- Cantidad -->
                        <div class="col-md-6 mb-3">
                            <label for="cantidad" class="form-label fw-bold">
                                <i class="bi bi-123 me-1"></i>
                                Cantidad <span class="text-danger">*</span>
                            </label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-hash"></i></span>
                                <input type="number" class="form-control" id="cantidad" min="1" max="99999" required placeholder="Ingrese cantidad">
                                <span class="input-group-text">unidades</span>
                            </div>
                        </div>
                    </div>

                    <!-- Comentario -->
                    <div class="mb-3">
                        <label for="comentario" class="form-label fw-bold">
                            <i class="bi bi-chat-text me-1"></i>
                            Comentario o Motivo
                        </label>
                        <textarea class="form-control" id="comentario" rows="3" maxlength="500"
                                  placeholder="Describa el motivo del ajuste (opcional)..."></textarea>
                    </div>

                    <!-- Vista previa -->
                    <div class="card border-primary mb-3" id="vistaPrevia" style="display: none;">
                        <div class="card-header bg-primary text-white">
                            <h6 class="mb-0"><i class="bi bi-eye me-2"></i>Vista Previa del Ajuste</h6>
                        </div>
                        <div class="card-body">
                            <div class="row text-center">
                                <div class="col-4">
                                    <div class="border-end">
                                        <div class="h5 mb-1" id="stockActualPreview">-</div>
                                        <small class="text-muted">Stock Actual</small>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="border-end">
                                        <div class="h5 mb-1 text-primary" id="operacionPreview">-</div>
                                        <small class="text-muted">Operación</small>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="h5 mb-1 text-success" id="stockNuevoPreview">-</div>
                                    <small class="text-muted">Stock Resultante</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-lg me-2"></i>Cancelar
                </button>
                <button type="button" class="btn btn-success" id="guardarAjusteBtn">
                    <span class="normal-state">
                        <i class="bi bi-check-lg me-2"></i>Confirmar Ajuste
                    </span>
                    <span class="loading-state" style="display: none;">
                        <span class="spinner-border spinner-border-sm me-2"></span>
                        Ajustando...
                    </span>
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de WhatsApp para compartir producto -->
<div class="modal fade" id="modalWhatsAppNumero" tabindex="-1" aria-labelledby="modalWhatsAppNumeroLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="modalWhatsAppNumeroLabel">
                    <i class="bi bi-whatsapp me-2"></i>
                    Compartir por WhatsApp
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Preview del producto -->
                <div class="mb-3">
                    <h6>Producto a compartir:</h6>
                    <div id="productoPreview" class="p-3 bg-light rounded">
                        <!-- Se llenará dinámicamente -->
                    </div>
                </div>

                <!-- Número de WhatsApp -->
                <div class="mb-3">
                    <label for="numeroWhatsApp" class="form-label">
                        <i class="bi bi-phone me-1"></i>
                        Número de WhatsApp (Costa Rica)
                    </label>
                    <div class="input-group">
                        <span class="input-group-text">+506</span>
                        <input type="text" 
                               class="form-control" 
                               id="numeroWhatsApp" 
                               placeholder="XXXXXXXX" 
                               maxlength="8" 
                               pattern="[0-9]{8}">
                    </div>
                    <div class="form-text">Ingrese el número sin espacios ni guiones</div>
                </div>

                <!-- Opción para incluir imagen -->
                <div class="mb-3">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="incluirImagen" checked>
                        <label class="form-check-label" for="incluirImagen">
                            <i class="bi bi-image me-1"></i>
                            Incluir imagen del producto
                        </label>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-lg me-2"></i>Cancelar
                </button>
                <button type="button" class="btn btn-success" id="btnEnviarWhatsApp" disabled>
                    <span class="normal-state">
                        <i class="bi bi-whatsapp me-2"></i>Enviar por WhatsApp
                    </span>
                    <span class="loading-state" style="display: none;">
                        <span class="spinner-border spinner-border-sm me-2"></span>
                        Enviando...
                    </span>
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/views/inventario/imagenes.js"></script>
    <script src="~/js/views/inventario/exportarInventario.js"></script>
    <script src="~/js/views/inventario/inventario.js"></script>
    <script src="~/js/views/inventario/detalleProducto.js"></script>

    <script>
        // ✅ CONTEXTO DEL PRODUCTO PARA JAVASCRIPT
        window.productoContexto = {
            id: @Model.ProductoId,
            nombre: '@Html.Raw(Model.NombreProducto.Replace("'", "\\'"))',
            stock: @Model.CantidadEnInventario,
            stockMinimo: @Model.StockMinimo,
            precio: '@((Model.Precio ?? Model.PrecioCalculado ?? 0).ToString("N0"))',
            imagenPrincipal: '@(Model.Imagenes != null && Model.Imagenes.Any() ? Model.Imagenes.First().UrlImagen : "")',
            medida: '@Html.Raw(Html.Encode(Model.Llanta != null && Model.Llanta.Ancho.HasValue ? $"{Model.Llanta.Ancho}/{Model.Llanta.Perfil}/R{Model.Llanta.Diametro}" : "").Replace("'", "\\\'"))',
            marca: '@Html.Raw(Html.Encode(Model.Llanta?.Marca ?? "").Replace("'", "\\\'"))'
        };

        // Función para ser llamada desde el botón en el HTML
        function compartirProducto() {
            $('#modalWhatsAppNumero').modal('show');
        }
    </script>
}