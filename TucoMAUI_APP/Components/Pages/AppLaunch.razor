@page "/";
@using TucoMAUI_APP.Models
@using TucoMAUI_APP.Services
@using Newtonsoft.Json
@using System.IdentityModel.Tokens.Jwt
@using TucoMAUI_APP.Services
@inject IAppService AppService


<h3>AppLaunch</h3>

Loading....

@code {


    protected async override Task OnInitializedAsync()
    {
        try
        {
            string userDetailsStr = await SecureStorage.GetAsync(nameof(Setting.UserBasicDetail));

            if (!string.IsNullOrWhiteSpace(userDetailsStr))
            {
                var userBasicDetail = JsonConvert.DeserializeObject<UserBasicDetail>(userDetailsStr);

                var handler = new JwtSecurityTokenHandler();
                var jsontoken = handler.ReadToken(userBasicDetail.AccessToken) as JwtSecurityToken;

                if (jsontoken == null)
                {
                    Console.WriteLine("Error: El token JWT no se pudo leer o es nulo.");
                    NavManager.NavigateTo("/login");
                    return;
                }

                Setting.UserBasicDetail = userBasicDetail;

                if (jsontoken.ValidTo < DateTime.UtcNow)
                {
                    bool isTokenRefreshed = await AppService.RefreshToken();

                    if (isTokenRefreshed)
                    {
                        NavManager.NavigateTo("/dashboard");
                    }
                    else
                    {
                        NavManager.NavigateTo("/login");
                    }
                }
                else
                {
                    NavManager.NavigateTo("/dashboard");
                }
            }
            else
            {
                Console.WriteLine("Error: No se encontraron detalles de usuario en SecureStorage.");
                NavManager.NavigateTo("/login");
            }
        }
        catch (JsonException ex)
        {
            Console.WriteLine($"Error al deserializar los detalles del usuario: {ex.Message}");
            NavManager.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error inesperado: {ex.Message}");
            NavManager.NavigateTo("/login");
        }
    }

}
