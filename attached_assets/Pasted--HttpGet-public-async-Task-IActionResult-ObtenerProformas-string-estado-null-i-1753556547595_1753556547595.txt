        [HttpGet]
        public async Task<IActionResult> ObtenerProformas(string estado = null, int pagina = 1, int tamano = 20)
        {
            try
            {
                _logger.LogInformation("üìã Solicitud de proformas desde el controlador Web");
                _logger.LogInformation("üìã Par√°metros: Estado={Estado}, P√°gina={Pagina}, Tama√±o={Tamano}", estado, pagina, tamano);

                var token = this.ObtenerTokenJWT();
                if (string.IsNullOrEmpty(token))
                {
                    return Json(new { success = false, message = "Sesi√≥n expirada" });
                }

                var resultado = await _facturacionService.ObtenerProformasAsync(token, estado, pagina, tamano);

                _logger.LogInformation("üìã Resultado del servicio: Success={Success}, Message={Message}",
                    resultado.success, resultado.message);

                if (resultado.success && resultado.data != null)
                {
                    _logger.LogInformation("üìã Procesando respuesta del API de proformas");

                    // El servicio ya procesa la respuesta del API y devuelve la estructura correcta
                    return Json(resultado.data);
                }
                else
                {
                    _logger.LogWarning("üìã No se pudieron obtener las proformas: {Message}", resultado.message);
                    return Json(new
                    {
                        success = false,
                        message = resultado.message ?? "No se pudieron obtener las proformas",
                        proformas = new List<object>(),
                        totalProformas = 0
                    });
                }
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "‚ùå Error cr√≠tico obteniendo proformas");
                return Json(new
                {
                    success = false,
                    message = "Error interno del servidor",
                    proformas = new List<object>(),
                    totalProformas = 0
                });
            }
        }
