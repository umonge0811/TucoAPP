async function procesarFacturaPendiente(facturaEscapada) {
    try {
        const factura = JSON.parse(facturaEscapada.replace(/&quot;/g, '"'));
        console.log('üîÑ === PROCESANDO FACTURA PENDIENTE ===');
        console.log('üîÑ Factura:', factura);
        
        // Verificar stock antes de proceder
        console.log('üîç Iniciando verificaci√≥n de stock para factura:', factura.facturaId);
        const verificacionStock = await verificarStockFacturaPendiente(factura.facturaId);
        
        console.log('üîç Resultado de verificaci√≥n de stock:', verificacionStock);
        
        if (!verificacionStock.success) {
            console.error('‚ùå Error en verificaci√≥n de stock:', verificacionStock);
            Swal.fire({
                icon: 'error',
                title: 'Error de verificaci√≥n',
                text: verificacionStock.message || 'No se pudo verificar el stock de los productos',
                confirmButtonColor: '#dc3545'
            });
            return;
        }
        
        // Cerrar modal de facturas pendientes
        $('#facturasPendientesModal').modal('hide');
        
        // Cargar los datos de la factura en el carrito
        cargarFacturaPendienteEnCarrito(factura);
        
        // Procesar resultado de verificaci√≥n de stock
        if (verificacionStock.tieneProblemas && verificacionStock.productosConProblemas && verificacionStock.productosConProblemas.length > 0) {
            console.log('‚ö†Ô∏è === PROBLEMAS DE STOCK DETECTADOS ===');
            console.log('‚ö†Ô∏è Cantidad:', verificacionStock.productosConProblemas.length);
            console.log('‚ö†Ô∏è Productos:', verificacionStock.productosConProblemas);
            
            // Mostrar modal de problemas de stock
            mostrarModalProblemasStock(verificacionStock.productosConProblemas, factura);
        } else {
            console.log('‚úÖ === SIN PROBLEMAS DE STOCK ===');
            console.log('‚úÖ tieneProblemas:', verificacionStock.tieneProblemas);
            console.log('‚úÖ cantidad productos:', verificacionStock.productosConProblemas?.length || 0);
            
            // Si no hay problemas, continuar con modal de finalizaci√≥n
            setTimeout(() => {
                mostrarModalFinalizarVenta();
            }, 500);
        }
        
    } catch (error) {
        console.error('‚ùå Error procesando factura pendiente:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'No se pudo procesar la factura seleccionada',
            confirmButtonColor: '#dc3545'
        });
    }
}
