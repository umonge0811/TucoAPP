// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(TucoContext))]
    [Migration("20250522214743_SyncWithDatabase")]
    partial class SyncWithDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RolPermiso", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<int>("PermisoId")
                        .HasColumnType("int")
                        .HasColumnName("PermisoID");

                    b.HasKey("RolId", "PermisoId")
                        .HasName("PK__RolPermi__D04D0EA1C1E00D6C");

                    b.HasIndex("PermisoId");

                    b.ToTable("RolPermiso", (string)null);
                });

            modelBuilder.Entity("Tuco.Clases.Models.RolPermisoRE", b =>
                {
                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.Property<int>("PermisoID")
                        .HasColumnType("int");

                    b.HasKey("RolID", "PermisoID")
                        .HasName("PK_RolPermiso");

                    b.HasIndex("PermisoID");

                    b.ToTable("RolPermisos");
                });

            modelBuilder.Entity("Tuco.Clases.Models.UsuarioPermisoRE", b =>
                {
                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<int>("PermisoID")
                        .HasColumnType("int");

                    b.HasKey("UsuarioID", "PermisoID")
                        .HasName("PK_UsuarioPermiso");

                    b.HasIndex("PermisoID");

                    b.ToTable("UsuarioPermiso");
                });

            modelBuilder.Entity("Tuco.Clases.Models.UsuarioRolRE", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("UsuarioId", "RolId")
                        .HasName("PK_UsuarioRol");

                    b.HasIndex("RolId");

                    b.ToTable("UsuarioRoles");
                });

            modelBuilder.Entity("UsuarioRol", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.HasKey("UsuarioId", "RolId")
                        .HasName("PK__UsuarioR__24AFD7B5C119E3DC");

                    b.HasIndex("RolId");

                    b.ToTable("UsuarioRol", (string)null);
                });

            modelBuilder.Entity("tuco.Clases.Models.AlertasInventario", b =>
                {
                    b.Property<int>("AlertaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AlertaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlertaId"));

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaLectura")
                        .HasColumnType("datetime");

                    b.Property<int>("InventarioProgramadoId")
                        .HasColumnType("int")
                        .HasColumnName("InventarioProgramadoID");

                    b.Property<bool>("Leida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.Property<string>("TipoAlerta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("AlertaId");

                    b.HasIndex("InventarioProgramadoId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AlertasInventarioProgramado", (string)null);
                });

            modelBuilder.Entity("tuco.Clases.Models.AsignacionUsuarioInventario", b =>
                {
                    b.Property<int>("AsignacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsignacionId"));

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("InventarioProgramadoId")
                        .HasColumnType("int");

                    b.Property<bool>("PermisoAjuste")
                        .HasColumnType("bit");

                    b.Property<bool>("PermisoConteo")
                        .HasColumnType("bit");

                    b.Property<bool>("PermisoValidacion")
                        .HasColumnType("bit");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("AsignacionId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("InventarioProgramadoId", "UsuarioId")
                        .IsUnique();

                    b.ToTable("AsignacionesUsuariosInventario");
                });

            modelBuilder.Entity("tuco.Clases.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClienteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Contacto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("ClienteId")
                        .HasName("PK__Clientes__71ABD0A797637CA5");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("tuco.Clases.Models.DetalleDocumento", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetalleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("DocumentoId")
                        .HasColumnType("int")
                        .HasColumnName("DocumentoID");

                    b.Property<decimal?>("PrecioUnitario")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    b.HasKey("DetalleId")
                        .HasName("PK__DetalleD__6E19D6FA7BF4A9E6");

                    b.HasIndex("DocumentoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetalleDocumento", (string)null);
                });

            modelBuilder.Entity("tuco.Clases.Models.DetalleInventario", b =>
                {
                    b.Property<int>("DetalleInventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleInventarioId"));

                    b.Property<int?>("CantidadContada")
                        .HasColumnType("int");

                    b.Property<int?>("CantidadRegistrada")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Diferencia")
                        .HasColumnType("int");

                    b.Property<int?>("InventarioId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("DetalleInventarioId");

                    b.HasIndex("InventarioId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetalleInventarios");
                });

            modelBuilder.Entity("tuco.Clases.Models.DetalleInventarioProgramado", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleId"));

                    b.Property<int?>("CantidadFisica")
                        .HasColumnType("int");

                    b.Property<int>("CantidadSistema")
                        .HasColumnType("int");

                    b.Property<int?>("Diferencia")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaConteo")
                        .HasColumnType("datetime2");

                    b.Property<int>("InventarioProgramadoId")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioConteoId")
                        .HasColumnType("int");

                    b.HasKey("DetalleId");

                    b.HasIndex("InventarioProgramadoId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioConteoId");

                    b.ToTable("DetallesInventarioProgramado", (string)null);
                });

            modelBuilder.Entity("tuco.Clases.Models.DetallePedido", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetalleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("PedidoID");

                    b.Property<decimal?>("PrecioUnitario")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    b.HasKey("DetalleId")
                        .HasName("PK__DetalleP__6E19D6FA14200334");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetallePedido", (string)null);
                });

            modelBuilder.Entity("tuco.Clases.Models.Documento", b =>
                {
                    b.Property<int>("DocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DocumentoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentoId"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("ClienteID");

                    b.Property<bool?>("EsProforma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Activo");

                    b.Property<DateTime?>("FechaDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Impuestos")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("DocumentoId")
                        .HasName("PK__Document__5DDBFF96B142C5D1");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("tuco.Clases.Models.HistorialAcciones", b =>
                {
                    b.Property<int>("HistorialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HistorialID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistorialId"));

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ErrorDetalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoAccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Modulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropositoToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("HistorialId")
                        .HasName("PK__Historia__975206EFBF27118C");

                    b.HasIndex("UsuarioId");

                    b.ToTable("HistorialAcciones");
                });

            modelBuilder.Entity("tuco.Clases.Models.ImagenesProducto", b =>
                {
                    b.Property<int>("ImagenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ImagenID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImagenId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    b.Property<string>("Urlimagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("URLImagen");

                    b.HasKey("ImagenId")
                        .HasName("PK__Imagenes__0C7D20D7D167D268");

                    b.HasIndex("ProductoId");

                    b.ToTable("ImagenesProducto", (string)null);
                });

            modelBuilder.Entity("tuco.Clases.Models.Inventario", b =>
                {
                    b.Property<int>("InventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InventarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventarioId"));

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Programado");

                    b.Property<DateTime>("FechaProgramada")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaRealizacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaReprogramada")
                        .HasColumnType("datetime");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("InventarioId")
                        .HasName("PK__Inventar__FB8A24B76FBF2391");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("tuco.Clases.Models.InventarioProgramado", b =>
                {
                    b.Property<int>("InventarioProgramadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventarioProgramadoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IncluirStockBajo")
                        .HasColumnType("bit");

                    b.Property<string>("TipoInventario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UbicacionEspecifica")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UsuarioCreadorId")
                        .HasColumnType("int");

                    b.HasKey("InventarioProgramadoId");

                    b.HasIndex("UsuarioCreadorId");

                    b.ToTable("InventariosProgramados");
                });

            modelBuilder.Entity("tuco.Clases.Models.Llanta", b =>
                {
                    b.Property<int>("LlantaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LlantaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LlantaId"));

                    b.Property<int?>("Ancho")
                        .HasColumnType("int");

                    b.Property<int?>("Capas")
                        .HasColumnType("int");

                    b.Property<string>("Diametro")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IndiceVelocidad")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Perfil")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    b.Property<string>("TipoTerreno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("LlantaId")
                        .HasName("PK__Llantas__921046DE2E400DE2");

                    b.HasIndex("ProductoId");

                    b.ToTable("Llantas");
                });

            modelBuilder.Entity("tuco.Clases.Models.PedidosProveedor", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PedidoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"));

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("FechaPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int")
                        .HasColumnName("ProveedorID");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("PedidoId")
                        .HasName("PK__PedidosP__09BA1410FD24CC54");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PedidosProveedor", (string)null);
                });

            modelBuilder.Entity("tuco.Clases.Models.Permiso", b =>
                {
                    b.Property<int>("PermisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PermisoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermisoId"));

                    b.Property<string>("DescripcionPermiso")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("PermisoId")
                        .HasName("PK__Permisos__96E0C7039B9EC879");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("tuco.Clases.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"));

                    b.Property<int?>("CantidadEnInventario")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("StockMinimo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ProductoId")
                        .HasName("PK__Producto__A430AE83EF23006D");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("tuco.Clases.Models.Proveedore", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProveedorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProveedorId"));

                    b.Property<string>("Contacto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("ProveedorId")
                        .HasName("PK__Proveedo__61266BB9FB5386BA");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("tuco.Clases.Models.Role", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("DescripcionRol")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RolId")
                        .HasName("PK__Roles__F92302D1A69BD34A");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("tuco.Clases.Models.SesionUsuario", b =>
                {
                    b.Property<int>("SesionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SesionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SesionId"));

                    b.Property<DateTime?>("FechaHoraInicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("SesionId")
                        .HasName("PK__SesionUs__52FD7C064728ED7A");

                    b.HasIndex("UsuarioId");

                    b.ToTable("SesionUsuario", (string)null);
                });

            modelBuilder.Entity("tuco.Clases.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaExpiracionToken")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropositoToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId")
                        .HasName("PK__Usuarios__2B3DE79898DC7E39");

                    b.HasIndex(new[] { "Email" }, "UQ__Usuarios__A9D105346078450B")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RolPermiso", b =>
                {
                    b.HasOne("tuco.Clases.Models.Permiso", null)
                        .WithMany()
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RolPermis__Permi__01142BA1");

                    b.HasOne("tuco.Clases.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RolPermis__RolID__00200768");
                });

            modelBuilder.Entity("Tuco.Clases.Models.RolPermisoRE", b =>
                {
                    b.HasOne("tuco.Clases.Models.Permiso", "Permiso")
                        .WithMany("RolPermiso")
                        .HasForeignKey("PermisoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RolPermiso_Permiso");

                    b.HasOne("tuco.Clases.Models.Role", "Rol")
                        .WithMany("RolPermiso")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RolPermiso_Rol");

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Tuco.Clases.Models.UsuarioPermisoRE", b =>
                {
                    b.HasOne("tuco.Clases.Models.Permiso", "Permiso")
                        .WithMany("UsuarioPermiso")
                        .HasForeignKey("PermisoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tuco.Clases.Models.Usuario", "Usuario")
                        .WithMany("UsuarioPermiso")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Tuco.Clases.Models.UsuarioRolRE", b =>
                {
                    b.HasOne("tuco.Clases.Models.Role", "Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioRol_Rol");

                    b.HasOne("tuco.Clases.Models.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioRol_Usuario");

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("UsuarioRol", b =>
                {
                    b.HasOne("tuco.Clases.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UsuarioRo__RolID__04E4BC85");

                    b.HasOne("tuco.Clases.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UsuarioRo__Usuar__03F0984C");
                });

            modelBuilder.Entity("tuco.Clases.Models.AlertasInventario", b =>
                {
                    b.HasOne("tuco.Clases.Models.InventarioProgramado", "InventarioProgramado")
                        .WithMany("Alertas")
                        .HasForeignKey("InventarioProgramadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AlertasInventarioProgramado_InventariosProgramados");

                    b.HasOne("tuco.Clases.Models.Producto", null)
                        .WithMany("AlertasInventarios")
                        .HasForeignKey("ProductoId");

                    b.HasOne("tuco.Clases.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AlertasInventarioProgramado_Usuarios");

                    b.Navigation("InventarioProgramado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("tuco.Clases.Models.AsignacionUsuarioInventario", b =>
                {
                    b.HasOne("tuco.Clases.Models.InventarioProgramado", "InventarioProgramado")
                        .WithMany("AsignacionesUsuarios")
                        .HasForeignKey("InventarioProgramadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tuco.Clases.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventarioProgramado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("tuco.Clases.Models.Cliente", b =>
                {
                    b.HasOne("tuco.Clases.Models.Usuario", "Usuario")
                        .WithMany("Clientes")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Clientes__Usuari__5070F446");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("tuco.Clases.Models.DetalleDocumento", b =>
                {
                    b.HasOne("tuco.Clases.Models.Documento", "Documento")
                        .WithMany("DetalleDocumentos")
                        .HasForeignKey("DocumentoId")
                        .HasConstraintName("FK__DetalleDo__Docum__619B8048");

                    b.HasOne("tuco.Clases.Models.Producto", "Producto")
                        .WithMany("DetalleDocumentos")
                        .HasForeignKey("ProductoId");

                    b.Navigation("Documento");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("tuco.Clases.Models.DetalleInventario", b =>
                {
                    b.HasOne("tuco.Clases.Models.Inventario", "Inventario")
                        .WithMany("DetalleInventarios")
                        .HasForeignKey("InventarioId");

                    b.HasOne("tuco.Clases.Models.Producto", "Producto")
                        .WithMany("DetalleInventarios")
                        .HasForeignKey("ProductoId");

                    b.Navigation("Inventario");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("tuco.Clases.Models.DetalleInventarioProgramado", b =>
                {
                    b.HasOne("tuco.Clases.Models.InventarioProgramado", "InventarioProgramado")
                        .WithMany("DetallesInventario")
                        .HasForeignKey("InventarioProgramadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tuco.Clases.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tuco.Clases.Models.Usuario", "UsuarioConteo")
                        .WithMany()
                        .HasForeignKey("UsuarioConteoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("InventarioProgramado");

                    b.Navigation("Producto");

                    b.Navigation("UsuarioConteo");
                });

            modelBuilder.Entity("tuco.Clases.Models.DetallePedido", b =>
                {
                    b.HasOne("tuco.Clases.Models.PedidosProveedor", "Pedido")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("FK__DetallePe__Pedid__6C190EBB");

                    b.HasOne("tuco.Clases.Models.Producto", "Producto")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("FK__DetallePe__Produ__6D0D32F4");

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("tuco.Clases.Models.Documento", b =>
                {
                    b.HasOne("tuco.Clases.Models.Cliente", "Cliente")
                        .WithMany("Documentos")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("FK__Documento__Clien__5629CD9C");

                    b.HasOne("tuco.Clases.Models.Usuario", "Usuario")
                        .WithMany("Documentos")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Documento__Usuar__571DF1D5");

                    b.Navigation("Cliente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("tuco.Clases.Models.HistorialAcciones", b =>
                {
                    b.HasOne("tuco.Clases.Models.Usuario", "Usuario")
                        .WithMany("HistorialAcciones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Historial__Usuar__114A936A");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("tuco.Clases.Models.ImagenesProducto", b =>
                {
                    b.HasOne("tuco.Clases.Models.Producto", "Producto")
                        .WithMany("ImagenesProductos")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("FK__ImagenesP__Produ__73BA3083");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("tuco.Clases.Models.Inventario", b =>
                {
                    b.HasOne("tuco.Clases.Models.Usuario", "Usuario")
                        .WithMany("Inventarios")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Inventari__Usuar__778AC167");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("tuco.Clases.Models.InventarioProgramado", b =>
                {
                    b.HasOne("tuco.Clases.Models.Usuario", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("UsuarioCreadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioCreador");
                });

            modelBuilder.Entity("tuco.Clases.Models.Llanta", b =>
                {
                    b.HasOne("tuco.Clases.Models.Producto", "Producto")
                        .WithMany("Llanta")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("FK__Llantas__Product__6FE99F9F");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("tuco.Clases.Models.PedidosProveedor", b =>
                {
                    b.HasOne("tuco.Clases.Models.Proveedore", "Proveedor")
                        .WithMany("PedidosProveedors")
                        .HasForeignKey("ProveedorId")
                        .HasConstraintName("FK__PedidosPr__Prove__68487DD7");

                    b.HasOne("tuco.Clases.Models.Usuario", "Usuario")
                        .WithMany("PedidosProveedors")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__PedidosPr__Usuar__693CA210");

                    b.Navigation("Proveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("tuco.Clases.Models.SesionUsuario", b =>
                {
                    b.HasOne("tuco.Clases.Models.Usuario", "Usuario")
                        .WithMany("SesionUsuarios")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__SesionUsu__Usuar__08B54D69");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("tuco.Clases.Models.Cliente", b =>
                {
                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("tuco.Clases.Models.Documento", b =>
                {
                    b.Navigation("DetalleDocumentos");
                });

            modelBuilder.Entity("tuco.Clases.Models.Inventario", b =>
                {
                    b.Navigation("DetalleInventarios");
                });

            modelBuilder.Entity("tuco.Clases.Models.InventarioProgramado", b =>
                {
                    b.Navigation("Alertas");

                    b.Navigation("AsignacionesUsuarios");

                    b.Navigation("DetallesInventario");
                });

            modelBuilder.Entity("tuco.Clases.Models.PedidosProveedor", b =>
                {
                    b.Navigation("DetallePedidos");
                });

            modelBuilder.Entity("tuco.Clases.Models.Permiso", b =>
                {
                    b.Navigation("RolPermiso");

                    b.Navigation("UsuarioPermiso");
                });

            modelBuilder.Entity("tuco.Clases.Models.Producto", b =>
                {
                    b.Navigation("AlertasInventarios");

                    b.Navigation("DetalleDocumentos");

                    b.Navigation("DetalleInventarios");

                    b.Navigation("DetallePedidos");

                    b.Navigation("ImagenesProductos");

                    b.Navigation("Llanta");
                });

            modelBuilder.Entity("tuco.Clases.Models.Proveedore", b =>
                {
                    b.Navigation("PedidosProveedors");
                });

            modelBuilder.Entity("tuco.Clases.Models.Role", b =>
                {
                    b.Navigation("RolPermiso");

                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("tuco.Clases.Models.Usuario", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Documentos");

                    b.Navigation("HistorialAcciones");

                    b.Navigation("Inventarios");

                    b.Navigation("PedidosProveedors");

                    b.Navigation("SesionUsuarios");

                    b.Navigation("UsuarioPermiso");

                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
