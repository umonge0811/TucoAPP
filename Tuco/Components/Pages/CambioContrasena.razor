@page "/cambiar-contrasena/{Token}"
@using Microsoft.AspNetCore.WebUtilities




<h3>Cambiar Contraseña</h3>
<EditForm Model="@model" OnValidSubmit="CambiarContrasena">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText type="Password" @bind="model.NuevaContrasena" placeholder="Nueva Contraseña" />
    <InputText type="Password" @bind="model.ConfirmarContrasena" placeholder="Confirmar Contraseña" />
    <button type="submit">Guardar</button>
</EditForm>

@code {
    private CambiarContrasenaRequest model = new();

    [Parameter]
    public string? Token { get; set; }

    protected override void OnInitialized()
    {
        // Extrae el token de la URL si está presente
        var query = new Uri(NavigationManager.Uri).Query;
        Token = QueryHelpers.ParseQuery(query)["token"];
    }

    // private async Task CambiarContrasena()
    // {
    //     if (string.IsNullOrEmpty(Token))
    //     {
    //         // Maneja el caso de un token inválido
    //         await Task.FromResult(0);
    //         return;
    //     }

    //     var response = await Http.PostAsJsonAsync($"https://tu-api.com/api/auth/cambiar-contrasena?token={Token}", model);

    //     if (response.IsSuccessStatusCode)
    //     {
    //         // Redirige al usuario a la página de inicio de sesión después de un cambio exitoso
    //         NavigationManager.NavigateTo("/login");
    //     }
    //     else
    //     {
    //         // Manejar errores de respuesta
    //     }
    // }

    private async Task CambiarContrasena()
    {
        try
        {
            var response = await Http.PostAsJsonAsync($"api/auth/activar-cuenta?token={Token}", model);

            if (response.IsSuccessStatusCode)
            {
                // Redirigir o mostrar mensaje de éxito
                Console.WriteLine("Contraseña cambiada con éxito.");
            }
            else
            {
                // Mostrar mensaje de error
                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Excepción: {ex.Message}");
        }
    }

    private class CambiarContrasenaRequest
    {
        [Required]
        public string NuevaContrasena { get; set; } = string.Empty;

        [Required]
        [Compare(nameof(NuevaContrasena))]
        public string ConfirmarContrasena { get; set; } = string.Empty;
    }
}
