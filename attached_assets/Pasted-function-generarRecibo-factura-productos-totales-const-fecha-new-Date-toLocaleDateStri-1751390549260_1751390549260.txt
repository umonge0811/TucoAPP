function generarRecibo(factura, productos, totales) {
    const fecha = new Date().toLocaleDateString('es-CR', { 
        day: '2-digit', 
        month: '2-digit', 
        year: 'numeric' 
    });
    const hora = new Date().toLocaleTimeString('es-CR', { 
        hour: '2-digit', 
        minute: '2-digit' 
    });

    // ‚úÖ DETERMINAR N√öMERO DE FACTURA CORRECTAMENTE
    let numeroFactura = 'N/A';
    
    // Prioridad 1: Desde la factura pasada como par√°metro
    if (factura && factura.numeroFactura) {
        numeroFactura = factura.numeroFactura;
    }
    // Prioridad 2: Desde factura pendiente global si existe
    else if (facturaPendienteActual && facturaPendienteActual.numeroFactura) {
        numeroFactura = facturaPendienteActual.numeroFactura;
    }
    // Prioridad 3: Verificar si los productos tienen facturaId (factura existente)
    else if (productos && productos.length > 0 && productos[0].facturaId) {
        numeroFactura = `FAC-${productos[0].facturaId}`;
    }

    console.log('üñ®Ô∏è === GENERANDO RECIBO ===');
    console.log('üñ®Ô∏è N√∫mero de factura determinado:', numeroFactura);
    console.log('üñ®Ô∏è Fuente del n√∫mero:', {
        desdeParametro: factura?.numeroFactura,
        desdePendiente: facturaPendienteActual?.numeroFactura,
        desdeProductos: productos?.[0]?.facturaId
    });

    // Funci√≥n para truncar texto seg√∫n el ancho de la impresora
    function truncarTexto(texto, maxCaracteres) {
        if (!texto) return '';
        return texto.length > maxCaracteres ? texto.substring(0, maxCaracteres - 3) + '...' : texto;
    }

    // Funci√≥n para formatear l√≠nea con espacios
    function formatearLineaEspacios(izquierda, derecha, anchoTotal = 32) {
        const espacios = anchoTotal - izquierda.length - derecha.length;
        return izquierda + ' '.repeat(Math.max(0, espacios)) + derecha;
    }

    // ‚úÖ RECIBO OPTIMIZADO PARA MINI IMPRESORAS T√âRMICAS (58mm/80mm)
    const reciboHTML = `
        <div id="recibo-termica" style="width: 58mm; max-width: 58mm; font-family: 'Courier New', 'Consolas', monospace; font-size: 9px; line-height: 1.2; margin: 0; padding: 0; color: #000;">

            <!-- ENCABEZADO -->
            <div style="text-align: center; margin-bottom: 8px; border-bottom: 1px dashed #000; padding-bottom: 8px;">
                <div style="font-size: 11px; font-weight: bold; margin-bottom: 2px;">GESTI√ìN LLANTERA</div>
                <div style="font-size: 8px; margin-bottom: 1px;">Sistema de Facturaci√≥n</div>
                <div style="font-size: 8px; margin-bottom: 2px;">Tel: (506) 0000-0000</div>
                <div style="font-size: 9px; font-weight: bold;">FACTURA DE VENTA</div>
                <div style="font-size: 8px;">No. ${numeroFactura}</div>
            </div>

            <!-- INFORMACI√ìN DE TRANSACCI√ìN -->
            <div style="margin-bottom: 6px; font-size: 8px;">
                <div>Fecha: ${fecha}</div>
                <div>Hora: ${hora}</div>
                <div>Cliente: ${truncarTexto(totales.cliente?.nombre || totales.cliente?.nombreCliente || factura.nombreCliente || 'Cliente General', 25)}</div>
                <div>M√©todo: ${totales.metodoPago || 'Efectivo'}</div>
                <div>Cajero: ${totales.usuario?.nombre || totales.usuario?.nombreUsuario || factura.usuarioCreadorNombre || 'Sistema'}</div>
            </div>

            <!-- SEPARADOR -->
            <div style="border-top: 1px dashed #000; margin: 6px 0;"></div>

            <!-- PRODUCTOS -->
            <div style="margin-bottom: 6px;">
                <div style="font-size: 8px; font-weight: bold; text-align: center; margin-bottom: 3px;">DETALLE DE PRODUCTOS</div>
                ${productos.map(p => {
                    const nombreTruncado = truncarTexto(p.nombreProducto, 20);
                    const subtotalProducto = p.precioUnitario * p.cantidad;
                    return `
                        <div style="margin-bottom: 2px;">
                            <div style="font-size: 8px;">${nombreTruncado}</div>
                            <div style="font-size: 8px; display: flex; justify-content: space-between;">
                                <span>${p.cantidad} x ‚Ç°${p.precioUnitario.toFixed(0)}</span>
                                <span>‚Ç°${subtotalProducto.toFixed(0)}</span>
                            </div>
                        </div>
                    `;
                }).join('')}
            </div>

            <!-- SEPARADOR -->
            <div style="border-top: 1px dashed #000; margin: 6px 0;"></div>

            <!-- TOTALES -->
            <div style="margin-bottom: 8px; font-size: 8px;">
                <div style="display: flex; justify-content: space-between;">
                    <span>Subtotal:</span>
                    <span>‚Ç°${totales.subtotal.toFixed(0)}</span>
                </div>
                <div style="display: flex; justify-content: space-between;">
                    <span>IVA (13%):</span>
                    <span>‚Ç°${totales.iva.toFixed(0)}</span>
                </div>
                <div style="border-top: 1px solid #000; margin: 3px 0; padding-top: 3px;">
                    <div style="display: flex; justify-content: space-between; font-weight: bold; font-size: 9px;">
                        <span>TOTAL:</span>
                        <span>‚Ç°${totales.total.toFixed(0)}</span>
                    </div>
                </div>
            </div>

            <!-- PIE DE P√ÅGINA -->
            <div style="text-align: center; margin-top: 8px; font-size: 8px; border-top: 1px dashed #000; padding-top: 6px;">
                <div style="margin-bottom: 2px;">¬°Gracias por su compra!</div>
                <div style="margin-bottom: 2px.">Vuelva pronto</div>
                <div style="margin-bottom: 4px;">www.gestionllantera.com</div>
                <div style="font-size: 7px;">Recibo generado: ${new Date().toLocaleString('es-CR')}</div>
            </div>

            <!-- ESPACIADO FINAL PARA CORTE -->
            <div style="height: 20px;"></div>
        </div>
    `;

    // ‚úÖ CONFIGURACI√ìN ESPEC√çFICA PARA MINI IMPRESORAS T√âRMICAS
    try {
        console.log('üñ®Ô∏è Iniciando impresi√≥n de recibo t√©rmico...');

        // Crear ventana de impresi√≥n con configuraci√≥n optimizada
        const ventanaImpresion = window.open('', '_blank', 'width=300,height=600,scrollbars=no,resizable=no');

        if (!ventanaImpresion) {
            throw new Error('No se pudo abrir la ventana de impresi√≥n. Verifique que los pop-ups est√©n habilitados.');
        }

        ventanaImpresion.document.write(`
            <!DOCTYPE html>
            <html>
                <head>
                    <title>Recibo T√©rmico - ${factura.numeroFactura}</title>
                    <meta charset="utf-8">
                    <style>
                        /* CONFIGURACI√ìN ESPEC√çFICA PARA IMPRESORAS T√âRMICAS */
                        @page {
                            size: 58mm auto; /* Ancho est√°ndar para mini impresoras */
                            margin: 0;
                            padding: 0;
                        }

                        @media screen {
                            body {
                                background: #f5f5f5;
                                padding: 10px;
                                font-family: 'Courier New', 'Consolas', monospace;
                            }
                            #recibo-termica {
                                background: white;
                                box-shadow: 0 0 10px rgba(0,0,0,0.1);
                                padding: 8px;
                                margin: 0 auto;
                            }
                        }

                        @media print {
                            body {
                                margin: 0;
                                padding: 0;
                                background: none;
                                -webkit-print-color-adjust: exact;
                                color-adjust: exact;
                            }

                            #recibo-termica {
                                box-shadow: none;
                                padding: 0;
                                margin: 0;
                                page-break-inside: avoid;
                            }

                            /* Optimizar para impresi√≥n t√©rmica */
                            * {
                                -webkit-print-color-adjust: exact !important;
                                color-adjust: exact !important;
                            }
                        }

                        /* Fuente monoespaciada para alineaci√≥n perfecta */
                        body, * {
                            font-family: 'Courier New', 'Consolas', 'Monaco', monospace !important;
                        }
                    </style>
                </head>
                <body>
                    ${reciboHTML}

                    <script>
                        // Funci√≥n para imprimir autom√°ticamente
                        function imprimirRecibo() {
                            console.log('üñ®Ô∏è Iniciando impresi√≥n...');

                            // Configurar para impresoras t√©rmicas
                            if (window.chrome) {
                                // Para navegadores basados en Chrome
                                window.print();
                            } else {
                                // Para otros navegadores
                                setTimeout(() => window.print(), 500);
                            }
                        }

                        // Imprimir cuando la p√°gina est√© completamente cargada
                        if (document.readyState === 'complete') {
                            imprimirRecibo();
                        } else {
                            window.addEventListener('load', imprimirRecibo);
                        }

                        // Cerrar ventana despu√©s de intentar imprimir
                        window.addEventListener('afterprint', function() {
                            console.log('üñ®Ô∏è Impresi√≥n completada, cerrando ventana...');
                            setTimeout(() => window.close(), 1000);
                        });

                        // Fallback para cerrar si no se detecta evento afterprint
                        setTimeout(() => {
                            if (!window.closed) {
                                console.log('üñ®Ô∏è Cerrando ventana por timeout...');
                                window.close();
                            }
                        }, 5000);
                    </script>
                </body>
            </html>
        `);

        ventanaImpresion.document.close();

        

    } catch (error) {
        console.error('‚ùå Error al imprimir recibo:', error);
        mostrarToast('Error de Impresi√≥n', 'No se pudo imprimir el recibo: ' + error.message, 'danger');

        // Fallback: mostrar el recibo en pantalla para copiar/imprimir manualmente
        mostrarReciboEnPantalla(reciboHTML, factura.numeroFactura);
    }
}
