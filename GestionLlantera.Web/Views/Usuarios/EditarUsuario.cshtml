
@model GestionLlantera.Web.Models.DTOs.UsuarioDTO
@{
    ViewData["Title"] = "Editar Usuario";
    Layout = "_AdminLayout";
}

<link rel="stylesheet" href="~/css/views/admin/usuarios.css" asp-append-version="true" />

<div class="container-fluid">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="breadcrumb-nav">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a asp-controller="Dashboard" asp-action="Index">
                    <i class="bi bi-house"></i> Dashboard
                </a>
            </li>
            <li class="breadcrumb-item">
                <a asp-controller="Usuarios" asp-action="Index">Gestión de Usuarios</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">Editar Usuario</li>
        </ol>
    </nav>

    <div class="page-header d-flex justify-content-between align-items-center mb-4">
        <h2>Editar Usuario</h2>
        <a asp-controller="Usuarios" asp-action="Index" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> Volver
        </a>
    </div>

    <div class="users-card">
        <form id="formEditarUsuario">
            <div class="row">
                <!-- Información básica -->
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="nombreUsuario" class="form-label">
                            <i class="bi bi-person me-2"></i>Nombre de Usuario <span class="text-danger">*</span>
                        </label>
                        <input type="text" class="form-control" id="nombreUsuario" name="NombreUsuario" 
                               value="@Model.NombreUsuario" required>
                        <div class="invalid-feedback"></div>
                    </div>

                    <div class="mb-3">
                        <label for="email" class="form-label">
                            <i class="bi bi-envelope me-2"></i>Correo Electrónico
                        </label>
                        <input type="email" class="form-control" id="email" name="Email" 
                               value="@Model.Email" readonly disabled>
                        <small class="text-muted">El correo electrónico no se puede modificar</small>
                    </div></small></div>

                <div class="mb-3">
                        <label for="activo" class="form-label">
                            <i class="bi bi-toggle-on me-2"></i>Estado
                        </label>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" 
                                   id="activo" name="Activo" 
                                   @(Model.Activo ? "checked" : "")>
                            <label class="form-check-label" for="activo">
                                Usuario activo
                            </label>
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" 
                                   id="esTopVendedor" name="EsTopVendedor" 
                                   @(Model.EsTopVendedor? "checked" : "")>
                            <label class="form-check-label" for="esTopVendedor">
                                <i class="bi bi-trophy me-2"></i>Es Top Vendedor
                            </label>
                        </div>
                    </div>
                </div>

                <!-- Rol principal -->
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="rolId" class="form-label">
                            <i class="bi bi-shield me-2"></i>Rol Principal <span class="text-danger">*</span>
                        </label>
                        <select class="form-select" id="rolId" name="RolId" required>
                            <option value="">Seleccione un rol</option>
                            @if (ViewBag.Roles != null)
                            {
                                @foreach (var rol in ViewBag.Roles)
                                {
                                    var isSelected = Model.Roles != null && Model.Roles.Contains(rol.NombreRol);
                                    <option value="@rol.RolId" @(isSelected ? "selected" : "")>
                                        @rol.NombreRol
                                    </option>
                                }
                            }
                        </select>
                        <div class="invalid-feedback"></div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">
                            <i class="bi bi-info-circle me-2"></i>Estado Actual
                        </label>
                        <div>
                            <span class="badge @(Model.Activo ? "bg-success" : "bg-danger") fs-6">
                                @(Model.Activo ? "Activo" : "Inactivo")
                            </span>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">
                            <i class="bi bi-calendar me-2"></i>Fecha de Registro
                        </label>
                        <div>
                            <span class="text-muted">@Model.FechaRegistro?.ToString("dd/MM/yyyy HH:mm")</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Botones de acción -->
            <div class="row mt-4">
                <div class="col-12">
                    <div class="d-flex justify-content-end gap-2">
                        <a asp-controller="Usuarios" asp-action="Index" class="btn btn-secondary">
                            <i class="bi bi-x-circle me-2"></i>Cancelar
                        </a>
                        <button type="submit" class="btn btn-primary" id="btnGuardar">
                            <i class="bi bi-check-circle me-2"></i>Guardar Cambios
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Modal de confirmación -->
<div class="modal fade" id="modalConfirmacion" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmar Cambios</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>¿Está seguro de que desea guardar los cambios en este usuario?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="confirmarGuardar">Confirmar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('formEditarUsuario');
            const btnGuardar = document.getElementById('btnGuardar');
            const modalConfirmacion = new bootstrap.Modal(document.getElementById('modalConfirmacion'));
            const confirmarGuardar = document.getElementById('confirmarGuardar');

            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Validar formulario
                if (!form.checkValidity()) {
                    form.classList.add('was-validated');
                    return;
                }

                // Mostrar modal de confirmación
                modalConfirmacion.show();
            });

            confirmarGuardar.addEventListener('click', async function() {
                modalConfirmacion.hide();
                
                try {
                    btnGuardar.disabled = true;
                    btnGuardar.innerHTML = '<i class="spinner-border spinner-border-sm me-2"></i>Guardando...';

                    const formData = new FormData(form);
                    const data = {
                        UsuarioId: @Model.UsuarioId,
                        NombreUsuario: formData.get('NombreUsuario'),
                        RolId: parseInt(formData.get('RolId')) || null,
                        Activo: formData.get('Activo') === 'on',
                        EsTopVendedor: formData.get('EsTopVendedor') === 'on'
                    };

                    const response = await fetch(`/Usuarios/EditarUsuario/@Model.UsuarioId`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();

                    if (result.success) {
                        Swal.fire({
                            title: '¡Éxito!',
                            text: result.message,
                            icon: 'success',
                            confirmButtonText: 'Aceptar'
                        }).then(() => {
                            window.location.href = '/Usuarios';
                        });
                    } else {
                        throw new Error(result.message);
                    }

                } catch (error) {
                    console.error('Error al editar usuario:', error);
                    
                    Swal.fire({
                        title: 'Error',
                        text: error.message || 'Ocurrió un error al editar el usuario',
                        icon: 'error',
                        confirmButtonText: 'Aceptar'
                    });
                } finally {
                    btnGuardar.disabled = false;
                    btnGuardar.innerHTML = '<i class="bi bi-check-circle me-2"></i>Guardar Cambios';
                }
            });
        });
    </script>
}
